
========================[Composite Id]================================

• Process of defining primary on more than on column is called composite id.

  #1:   
  
                       <!-- Cfg  Composite PK with isbn,bookName-->
	                             <composite-id>
	                                     <key-property name="isbn" column="isbn"/>
	                                     <key-property name="bookName" column="book_name"/>
	                             </composite-id>

Hibernate: 
    create table book (
       isbn integer not null,
        book_name varchar(255) not null,
        category varchar(255),
        authorName varchar(255),
        price double precision,
        primary key (isbn, book_name)
    ) engine=MyISAM
Hibernate: 
    insert 
    into
        book
        (category, authorName, price, isbn, book_name) 
    values
        (?, ?, ?, ?, ?)
Successfully saved ..........and Id is...Book(isbn=1, bookName=Head First Java, authorName=Kathy, category=ORM, price=2000.0)

Note :: If you enter same value,then we get exception like......
                   ERROR: Duplicate entry '1-Head First Java' for key 'PRIMARY'

                   
    #2     ::  Composite PK as seperate class         
  //HAS -A property to suppport composite Id
  
                              <!--  Composite PK as Seperate class-->
	                             <composite-id name="compk" class="com.har.entity.CompositePK">
	                                     <key-property name="isbn" column="isbn"/>
	                                     <key-property name="bookName" column="book_name"/>
	                             </composite-id>
                   
               
  ================================= [Composite PK With Anno]======================================================
   
   #01:@IdClass
   
@IdClass(BookAnnoComPk01.class)
@Entity
@Table(name="book_anno")
public class BookAnno01 implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	private int isbn;               //International Standard Book Number
	@Id
    private String bookName;                
               .............    
                   
   }                
                   
 BookAnnoComPk01.class
 ------------------------------------      
@Data
public class BookAnnoComPk01 implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int isbn;               //International Standard Book Number
    private String bookName;
	
	
}
    
  #02:@Embeddable and    @EmbeddedId
    
 //#02 With @EmbeddedId
@NoArgsConstructor
@AllArgsConstructor
@Data
@Entity
@Table(name="book_anno")
public class BookAnno02 implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@EmbeddedId
   private BookAnnoComPk02 comPk;
    private String authorName;
    private String category;
    private Double price;
	
}
    
    
@Data
@Embeddable
public class BookAnnoComPk02 implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int isbn;               //International Standard Book Number
    private String bookName;
	
	
}
    
    
    
    
    
    
    
    
    
      
      
                   
                   
                   
                   